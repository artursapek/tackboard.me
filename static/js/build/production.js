// Generated by CoffeeScript 1.3.3
(function() {
  var ajax, appendobj, c, create, flash_UI, help, help_steps, init_paste, poster, poster_editor, preload, read_hash, tack_only, tackboard, toggle_editor,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  c = function(x) {
    return console.log(x != null ? x : '!');
  };

  create = function(a, b, c, d) {
    var child, key, value, x, _i, _len;
    x = document.createElement(a);
    for (key in b) {
      value = b[key];
      x[key] = value;
    }
    if (c != null) {
      x.innerHTML = c;
    }
    if (d != null) {
      for (_i = 0, _len = d.length; _i < _len; _i++) {
        child = d[_i];
        x.appendChild(child);
      }
    }
    return x;
  };

  appendobj = function(a) {
    var b, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = a.length; _i < _len; _i++) {
      b = a[_i];
      _results.push(b[0].appendChild(b[1]));
    }
    return _results;
  };

  preload = function(urls, i) {
    var img;
    if (!(i != null)) {
      i = 0;
    }
    img = new Image();
    if (i === urls.length) {
      return;
    }
    img.onload = function() {
      return preload(urls, i + 1);
    };
    return img.src = urls[i];
  };

  window.c = c;

  window.create = create;

  window.appendobj = appendobj;

  window.preload = preload;

  poster = (function() {

    function poster(data) {
      var key, me, value;
      this.data = data;
      me = this;
      for (key in data) {
        value = data[key];
        this[key] = value;
      }
      this.dragging = this.lifted = false;
      this.tack_color = data.tack_color != null ? data.tack_color : 'B';
      this.all = create('div', {
        className: 'poster_all',
        id: 'poster_' + data.id
      });
      if (data.id != null) {
        $(this.all).attr('pid', data.id);
      }
      $(this.all).css({
        'left': data.x + 'px',
        'bottom': data.y + 'px',
        'z-index': data.id
      }).mouseover(function() {
        if (!me.lifted && !me.dragging) {
          window.user_interacted = true;
          $(me.age_div).show();
          $(me.tear_button).show();
          return true;
        }
      }).mouseout(function() {
        $(me.age_div).hide();
        return $(me.tear_button).hide();
      });
      this.page = create('div', {
        className: 'poster_page'
      });
      this.body = create('div', {
        className: 'poster_text'
      }, data.body);
      this.tack = create('div', {
        className: 'poster_tack'
      });
      $(this.tack).css({
        'background-color': tack_colors[this.tack_color]
      });
      appendobj([[this.all, this.page], [this.all, this.body], [this.all, this.tack]]);
      if (data.id !== 1000000) {
        window['poster_' + data.id] = this;
      }
      return this;
    }

    poster.prototype.lift = function() {
      var me;
      me = this;
      this.lifted = true;
      $([this.lift_button, this.age_div, this.lifted_corner, this.tear_button, this.body]).each(function() {
        return $(this).hide();
      });
      $(this.unlift_button).show();
      $(this.page).attr('class', 'poster_page_lifted').animate({
        'bottom': '+=7px'
      }, 0).css({
        'background-position': '0px 0px'
      });
      $(this.tack).animate({
        'bottom': '-=261px'
      }, 0);
      $(this.all).animate({
        'bottom': '+=261px'
      }, 0).animate({
        'opacity': '0.65'
      }, 500).mouseover(function() {
        if (me.lifted) {
          return $(this).animate({
            'opacity': '1'
          }, 0);
        }
      }).mouseout(function() {
        if (me.lifted) {
          return $(this).animate({
            'opacity': '0.65'
          }, 0);
        }
      }).addClass('poster_all_lifted');
      return true;
    };

    poster.prototype.unlift = function() {
      var me;
      me = this;
      this.lifted = false;
      $([this.lift_button, this.tear_button, this.body]).each(function() {
        return $(this).show();
      });
      $(this.page).animate({
        bottom: '0px'
      }, 0).css('background-position', '0px 0px').attr({
        "class": 'poster_page'
      });
      $(this.all).animate({
        bottom: '-=261px',
        opacity: 1
      }, 0).removeClass('poster_all_lifted');
      $(this.tack).animate({
        bottom: '+=261px'
      }, 0);
      $(this.unlift_button).hide();
      return true;
    };

    poster.prototype.tear = function() {
      var me;
      me = this;
      if (!this.active) {
        return false;
      }
      if (!(typeof do_ajax !== "undefined" && do_ajax !== null)) {
        ajax.tear({
          id: this.id
        });
      }
      this.unarm_tear();
      $([this.tear_button, this.age_div]).each(function() {
        return $(this).remove();
      });
      $([this.lift_button, this.lifted_corner]).each(function() {
        return $(this).hide();
      });
      $(this.all).css({
        'pointer-events': 'none'
      });
      setTimeout(function() {
        $([me.page, me.body]).each(function() {
          return $(this).animate({
            top: '+=100px'
          }, 1500, 'easeOutExpo').fadeOut(500);
        });
        return setTimeout(function() {
          return $(me.all).css({
            width: '0px',
            height: '0px'
          });
        }, 2100);
      }, 200);
      this.active = false;
      return all_posters.splice(all_posters.indexOf(this), 1);
    };

    poster.prototype.arm_tear = function() {
      var me, noage, offset;
      me = this;
      noage = true;
      offset = $(this.all).offset();
      this.unarm_others();
      $(this.age_div).hide();
      $(tear_confirm).css({
        top: parseInt(offset.top) - 10 + 'px',
        left: parseInt(offset.left) - 15 + 'px'
      }).show().attr({
        armed: me.id
      });
      return $(this.tear_fog).fadeIn(50);
    };

    poster.prototype.unarm_others = function() {
      var p, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = all_posters.length; _i < _len; _i++) {
        p = all_posters[_i];
        if (p !== this) {
          _results.push($(p.tear_fog).fadeOut(50));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    poster.prototype.unarm_tear = function() {
      var noage;
      noage = false;
      $(tear_confirm).fadeOut(100);
      return $(this.tear_fog).fadeOut(50);
    };

    poster.prototype.post = function(animate_tack) {
      var me;
      if (animate_tack == null) {
        animate_tack = false;
      }
      me = this;
      this.lift_button = create('div', {
        className: 'lift_target'
      });
      this.unlift_button = create('div', {
        className: 'unlift_target'
      });
      this.lifted_corner = create('div', {
        className: 'lifted_corner'
      });
      this.tear_button = create('div', {
        className: 'tear_button'
      });
      this.tear_fog = create('div', {
        className: 'tear_fog'
      });
      this.age_div = create('div', {
        className: 'poster_age'
      }, this.age);
      $(this.tear_button).click(function() {
        return me.arm_tear();
      }).hide();
      $([this.unlift_button, this.age_div, this.lifted_corner, this.lift_button, this.tear_button, this.tear_fog]).each(function() {
        return $(me.all).append(this);
      });
      $('#tackboard').append(this.all);
      $(this.lift_button).click(function() {
        return me.lift();
      }).mouseover(function() {
        $(me.page).css({
          'background-position': '0px -316px'
        });
        return $(me.lifted_corner).show();
      }).mouseout(function() {
        $(me.page).css({
          'background-position': '0px 0px'
        });
        return $(me.lifted_corner).hide();
      });
      $(this.unlift_button).click(function() {
        return me.unlift();
      }).mouseover(function() {
        return $(me.page).css({
          'background-position': '0px -70px'
        });
      }).mouseout(function() {
        return $(me.page).css({
          'background-position': '0px 0px'
        });
      });
      if (animate_tack) {
        $(this.tack).hide();
        setTimeout(function() {
          return $(me.tack).css({
            background: tack_colors[me.tack_color]
          }).animate({
            'width': '20px',
            'height': '20px',
            'left': '-=7px',
            'bottom': '-=7px'
          }, 0).fadeIn(100).delay(400).animate({
            'width': '6px',
            'height': '6px',
            'left': '+=7px',
            'bottom': '+=7px'
          }, 200);
        }, 500);
      }
      return true;
    };

    return poster;

  })();

  tack_only = (function() {

    function tack_only(data) {
      var me;
      me = this;
      this.tack = create('div', {
        className: 'tack_only'
      });
      $(this.tack).css({
        left: data.x + 120 + 'px',
        bottom: data.y + 293 + 'px',
        'background-color': tack_colors[data.tack_color],
        'z-index': 1
      });
      window['tack_' + data.id] = this;
    }

    tack_only.prototype.post = function() {
      return $('#tackboard').append(this.tack);
    };

    return tack_only;

  })();

  window.poster = poster;

  window.tack_only = tack_only;

  window.tack_colors = {
    'B': '#41b2f2',
    'R': '#f23b4c',
    'G': '#32b221',
    'P': '#eb6e96',
    'W': '#c3c3c3'
  };

  /* 
  Global functions being imported
  
  create
  appendobj
  preload
  poster
  tack_only
  */


  /*
  Global functions being used from within this doc
  
  ajax
  tackboard
  poster_editor
  */


  $(document).ready(function() {
    var no_, prompt, tear_confirm, yes_;
    window.all_posters = [];
    window.all_tacks = [];
    window.statuses = {};
    window.ignore_stats = false;
    window.user_interacted = false;
    window.keep_categories = false;
    if (document.location.hash) {
      read_hash(true);
    } else {
      ajax.all();
    }
    preload(['/static/img/peek_behind.png'], 0);
    $('#edit_me').wysiwyg();
    $('#editor').append(create('div', {
      id: 'close_button'
    })).append(create('div', {
      id: 'save_button'
    }));
    $('#save_button').click(function() {
      return tackboard.draggable_poster();
    });
    $('#close_button').click(function() {
      return toggle_editor();
    });
    $(document).bind('paste', function(e) {
      return poster_editor.clean_up();
    });
    tear_confirm = create('div', {
      className: 'tear_conf'
    });
    prompt = create('div', {
      className: 'tear_conf_prompt'
    }, '<b>Permanently</b> remove?');
    yes_ = create('div', {
      className: 'tear_opt_yes'
    }, 'Remove');
    no_ = create('div', {
      className: 'tear_opt_no'
    }, 'Cancel');
    $(yes_).click(function() {
      return window['poster_' + tear_confirm.getAttribute('armed')].tear();
    });
    $(no_).click(function() {
      return window['poster_' + tear_confirm.getAttribute('armed')].unarm_tear();
    });
    $([prompt, yes_, no_]).each(function() {
      return $(tear_confirm).append(this);
    });
    $('body').append(tear_confirm);
    window.tear_confirm = tear_confirm;
    tackboard.reset_category_dropdown();
    $('#category_dropdown').css('left', $('#tackboard_logo').width() + $('#board_name').width() + 52 + 'px');
    $('#category_dropdown_button').unbind().mouseover(function() {
      window.keep_categories = true;
      $(this).addClass('category_hover');
      return $('#category_dropdown').css({
        display: 'inline-block'
      });
    }).mouseout(function() {
      window.keep_categories = false;
      return setTimeout(function() {
        if (!window.keep_categories) {
          $('#category_dropdown').hide();
          return $('#category_dropdown_button').removeClass('category_hover');
        }
      }, 200);
    });
    $('#category_dropdown').unbind().mouseover(function() {
      return window.keep_categories = true;
    }).mouseout(function() {
      window.keep_categories = false;
      return setTimeout(function() {
        if (!window.keep_categories) {
          $('#category_dropdown').hide();
          return $('#category_dropdown_button').removeClass('category_hover');
        }
      }, 200);
    });
    $(window).hashchange(function() {
      return read_hash(true);
    });
    flash_UI();
    return true;
  });

  ajax = {
    all: function() {
      var ajax_call;
      ajax_call = $.get('/ajax/active_posters?board_id=' + board_id + '&category=' + current_category);
      return ajax_call.done(function(e) {
        var data, index, p;
        e = $.parseJSON(e)[0];
        for (index in e) {
          data = e[index];
          p = data.active ? new poster(data) : new tack_only(data);
          p.post(false);
          if (data.active) {
            all_posters.push(p);
          } else {
            all_tacks.push(p);
          }
          statuses[index] = data.active;
        }
        return tackboard.reset_category_dropdown();
      });
    },
    post: function(data, object) {
      var ajax_call;
      ajax_call = $.ajax({
        type: 'POST',
        url: '/ajax/add_poster/',
        data: {
          csrfmiddlewaretoken: csrf_token,
          board_id: board_id,
          x: data.x,
          y: data.y,
          tack_color: data.color,
          body: data.body,
          category: current_category
        }
      });
      return ajax_call.done(function(e) {
        data = $.parseJSON(e)[1];
        object.id = data.id;
        $(object.all).css({
          'z-index': data.id
        }).attr({
          'id': 'poster_' + data.id,
          'pid': data.id
        });
        statuses[data.id] = data.active;
        window['poster_' + data.id] = object;
        return tackboard.reset_category_dropdown();
      });
    },
    tear: function(data) {
      var ajax_call;
      return ajax_call = $.ajax({
        type: 'POST',
        url: '/ajax/remove_poster/',
        data: {
          csrfmiddlewaretoken: csrf_token,
          poster_id: data.id
        }
      });
    },
    update: function() {
      var ajax_call;
      ajax_call = $.get('/ajax/update/?board_id=' + board_id + '&category=' + current_category);
      return ajax_call.done(function(e) {
        var data, index, statuses, update;
        update = $.parseJSON(e)[0];
        statuses = window.statuses;
        for (index in update) {
          data = update[index];
          if (!(statuses[index] != null)) {
            ajax.add(index);
          } else {
            if (!statuses[index] === update[index]) {
              window['poster_' + index].tear(false);
            }
          }
        }
        return window.statuses = update;
      });
    },
    add: function(id) {
      var ajax_call;
      ajax_call = $.get('/ajax/retrieve_poster/?poster_id=' + id);
      return ajax_call.done(function(e) {
        var data, p, t;
        data = $.parseJSON(e)[0];
        if (data.active) {
          p = new poster(data);
          return p.post(true);
        } else {
          t = new tack_only(data);
          return t.post();
        }
      });
    },
    "switch": function(category, change_url, load_all) {
      var _i, _len;
      if (change_url == null) {
        change_url = true;
      }
      if (load_all == null) {
        load_all = false;
      }
      tackboard.clear_board();
      $('#category_dropdown_button').removeClass('category_hover').text(category);
      $('#category_dropdown').hide().empty();
      for (_i = 0, _len = categories.length; _i < _len; _i++) {
        c = categories[_i];
        if (c !== category) {
          $('#category_dropdown').append($('<li onclick="ajax.switch($(this).text()); ajax.reference(\'Switched category\');">' + c + '</li>'));
        }
      }
      window.current_category = category;
      if (load_all) {
        ajax.all();
      }
      if (change_url) {
        return document.location = '#' + category.toLowerCase().match(/\w+/gi).join('');
      }
    },
    reference: function(action) {
      var ajax_call;
      if (ignore_stats) {
        return;
      }
      return ajax_call = $.ajax({
        type: 'POST',
        url: '/ajax/reference_counter',
        data: {
          csrfmiddlewaretoken: csrf_token,
          action: action
        }
      });
    }
  };

  tackboard = {
    "switch": function(text) {
      return document.location = '#' + text.match(/\w+/gi).join('').toLowerCase();
    },
    clear_board: function() {
      var p, t, _i, _j, _len, _len1;
      for (_i = 0, _len = all_posters.length; _i < _len; _i++) {
        p = all_posters[_i];
        $(p.all).remove();
      }
      for (_j = 0, _len1 = all_tacks.length; _j < _len1; _j++) {
        t = all_tacks[_j];
        $(t.tack).remove();
      }
      window.all_posters = [];
      return window.all_tacks = [];
    },
    reset_category_dropdown: function() {
      return $('#category_dropdown').css('min-width', $('#category_dropdown_button').width() + 26 + 'px');
    },
    draggable_poster: function() {
      var p;
      $('#edit_me-wysiwyg-iframe').hide();
      p = new poster({
        body: poster_editor.html(),
        x: 77,
        y: 112,
        id: 1000000,
        tack_color: 'B',
        active: true,
        age: 'just now'
      });
      p.body_html = poster_editor.html();
      p.post();
      $([p.tack, p.tear_button, p.lift_button]).each(function() {
        return $(this).hide();
      });
      p.dragging = true;
      p.drag_icon = create('div', {
        className: 'drag_icon'
      });
      p.tack_dialog = create('div', {
        className: 'tack_dialog_full'
      });
      p.tack_prompt = create('div', {
        className: 'tack_prompt_1'
      }, 'Drag your poster to where you want to post it.');
      p.tack_options = create('div', {
        className: 'tack_options'
      });
      $(p.tack_dialog).append(p.tack_prompt);
      $(p.all).append(p.drag_icon).append(p.tack_dialog).css('cursor', 'pointer').one('mousedown', function() {
        var color, index, opt, tack, _results;
        $(p.tack_prompt).text('Choose tack color to post.').attr('class', 'tack_prompt_2');
        $(p.tack_dialog).append(p.tack_options);
        _results = [];
        for (index in tack_colors) {
          color = tack_colors[index];
          opt = create('div', {
            className: 'tack_option'
          });
          tack = create('div', {
            className: 'poster_tack'
          });
          $(tack).css({
            top: '12px',
            left: '12px',
            background: tack_colors[index]
          });
          $(opt).attr({
            color: index
          }).mouseover(function() {
            $('.tack_option').each(function() {
              return $(this).css({
                opacity: '0.25'
              });
            });
            return $(this).css({
              opacity: '1'
            });
          }).mouseout(function() {
            return $('.tack_option').each(function() {
              return $(this).css({
                opacity: 1
              });
            });
          }).click(function() {
            $(p.tack_dialog).remove();
            $(p.all).css({
              cursor: ''
            });
            p.dragging = false;
            poster_editor.lock_opts = false;
            p.commit(this.getAttribute('color'));
            return setTimeout(function() {
              return $('#add_button').fadeIn(500);
            }, 2000);
          });
          $(opt).append(tack);
          _results.push($(p.tack_options).append(opt));
        }
        return _results;
      });
      poster_editor.drag_handler.attach(p.all);
      $(poster_editor).hide();
      poster_editor.lock_opts = true;
      $('#add_button').hide();
      toggle_editor();
      return p.commit = function(color) {
        var me;
        me = this;
        this.x = parseInt($(p.all).css('left'));
        this.y = parseInt($(p.all).css('bottom'));
        $(this.drag_icon).fadeOut(100);
        $(this.tear_button).hide();
        setTimeout(function() {
          return $(me.tack).css('background', tack_colors[color]).animate({
            'width': '20px',
            'height': '20px',
            'left': '-=7px',
            'bottom': '-=7px'
          }, 0).fadeIn(100).delay(400).animate({
            'width': '6px',
            'height': '6px',
            'left': '+=7px',
            'bottom': '+=7px'
          }, 200);
        }, $(this.lift_button).show(), 500);
        ajax.post({
          x: this.x,
          y: this.y,
          color: color,
          body: this.body_html
        }, this);
        all_posters.push(this);
        return poster_editor.body().innerHTML = '';
      };
    }
  };

  poster_editor = {
    html: function() {
      var body, e, emails, url, urls, x, _i, _j, _len, _len1;
      body = $('#edit_me-wysiwyg-iframe')[0].contentDocument.getElementsByTagName('body')[0].innerHTML;
      urls = [];
      emails = [];
      urls = body.match(/[\w\d\.\/\:\@]+\.(com|net|org|info|me|mobi|co.uk|co|in|us|ca|edu)/gi);
      emails = body.match(/[\w\d\.\-\_\:]+\@[\w\d\.\-\_\:]+\.(com|net|org|info|me|mobi|co.uk|co|in|us|ca|edu)/gi);
      if (urls) {
        for (_i = 0, _len = urls.length; _i < _len; _i++) {
          x = urls[_i];
          if (__indexOf.call(x, '@') >= 0) {
            continue;
          }
          if (__indexOf.call(x, 'http://') >= 0) {
            url = x;
          } else {
            url = 'http://' + x;
          }
          body = body.replace(x, '<a href="' + url + '" target="_newtab">' + x + '</a>');
        }
      }
      if (emails) {
        for (_j = 0, _len1 = emails.length; _j < _len1; _j++) {
          e = emails[_j];
          body = body.replace(e, '<a href="mailto:' + e + '" target="_newtab">' + e + '</a>');
        }
      }
      return body;
    },
    body: function() {
      return $('#edit_me-wysiwyg-iframe')[0].contentDocument.getElementsByTagName('body')[0];
    },
    clean_up: function(input) {
      var html, r, t, tags, _i, _len;
      if (input == null) {
        input = this.html();
      }
      tags = ['<a.*</a>', '<script.*</script>', '<img.*/>', '<span.*</span>', '<div[^>].*</div>'];
      for (_i = 0, _len = tags.length; _i < _len; _i++) {
        t = tags[_i];
        r = new RegExp(t, 'gi');
        while (html.match(r)) {
          html = html.replace(html.match(r)[0], '');
        }
      }
      return this.body().innerHTML = html;
    },
    hide: function() {
      $(this.body()).hide();
      return $('#editable_poster').css('background', 'none');
    },
    drag_handler: {
      _me: null,
      attach: function(me) {
        me.onmousedown = poster_editor.drag_handler._dragBegin;
        me.dragBegin = new Function();
        me.drag = new Function();
        me.dragEnd = new Function();
        return me;
      },
      _dragBegin: function(e) {
        var me, x, y;
        me = poster_editor.drag_handler._me = this;
        if (isNaN(parseInt(me.style.left))) {
          me.style.left = '0px';
        }
        if (isNaN(parseInt(me.style.bottom))) {
          me.style.bottom = '0px';
        }
        x = parseInt(me.style.left);
        y = parseInt(me.style.bottom);
        e = e ? e : window.event;
        me.mouseX = e.clientX;
        me.mouseY = e.clientY;
        me.dragBegin(me, x, y);
        document.onmousemove = poster_editor.drag_handler._drag;
        document.onmouseup = poster_editor.drag_handler._dragEnd;
        return false;
      },
      _drag: function(e) {
        var me, x, y;
        if (!poster_editor.lock_opts) {
          return;
        }
        me = poster_editor.drag_handler._me;
        x = parseInt(me.style.left);
        y = parseInt(me.style.bottom);
        e = e ? e : window.event;
        me.style.left = Math.max(Math.min(x + (e.clientX - me.mouseX), 929), 5) + 'px';
        me.style.bottom = Math.min(Math.max(y + (me.mouseY - e.clientY), 10), 364) + 'px';
        me.mouseX = e.clientX;
        me.mouseY = e.clientY;
        me.drag(me, x, y);
        return false;
      },
      _dragEnd: function() {
        var me, x, y;
        me = poster_editor.drag_handler._me;
        x = parseInt(me.style.left);
        y = parseInt(me.style.bottom);
        me.dragEnd(me, x, y);
        return document.onmousemove = document.onmouseup = poster_editor.drag_handler._me = null;
      }
    },
    lock_opts: false,
    open: false
  };

  read_hash = function(load_all) {
    var cat, hash, _i, _len, _results;
    if (load_all == null) {
      load_all = false;
    }
    hash = document.location.hash.substring(1);
    if (hash === '') {
      ajax["switch"](default_category, false, true);
    }
    _results = [];
    for (_i = 0, _len = categories.length; _i < _len; _i++) {
      c = categories[_i];
      cat = c.toLowerCase().match(/\w+/gi).join('');
      if (cat === hash) {
        if (c !== current_category) {
          _results.push(ajax["switch"](c, false, load_all));
        } else {
          _results.push(ajax.all());
        }
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  flash_UI = function() {
    setTimeout(function() {
      var noage;
      if (window.user_interacted) {
        return;
      }
      noage = true;
      $('.lifted_corner').each(function() {
        return $(this).show();
      });
      $('.poster_age').each(function() {
        return $(this).hide();
      });
      $('.tear_button').each(function() {
        return $(this).css({
          'background-position': '0px -37px'
        }).show();
      });
      return $('.poster_page').each(function() {
        return $(this).css({
          'background-position': '0px -316px'
        });
      });
    }, 3000);
    return setTimeout(function() {
      var noage;
      if (window.user_interacted) {
        return;
      }
      noage = false;
      $('.lifted_corner').each(function() {
        return $(this).hide();
      });
      $('.tear_button').each(function() {
        return $(this).css({
          'background-position': ''
        }).hide();
      });
      return $('.poster_page').each(function() {
        return $(this).css({
          'background-position': ''
        });
      });
    }, 3800);
  };

  toggle_editor = function() {
    window.user_interacted = true;
    if (!poster_editor.open) {
      $('#edit_me-wysiwyg-iframe').show();
      $('#editor, #close_button, #save_button').animate({
        bottom: '+=530px'
      }, 450, 'easeOutElasticMinimal');
      setTimeout(function() {
        return $('#save_button, #close_button').fadeIn(100);
      }, 700);
      return setTimeout(function() {
        return poster_editor.open = true;
      }, 300);
    } else {
      $('#close_button, #save_button, #editor').animate({
        bottom: '-=530px'
      }, 150, 'easeOutQuad');
      $('#close_button, #save_button').fadeOut(300);
      return setTimeout(function() {
        return poster_editor.open = false;
      }, 300);
    }
  };

  init_paste = function(o) {
    var doc;
    doc = o.contentWindow.document;
    if (doc.getElementsByTagName('body').length) {
      return $(doc.body).bind('paste', function() {
        return false;
      });
    }
  };

  help = function() {
    var chosen, dialog, dialog_text, step, x, _i;
    for (x = _i = 0; _i <= 4; x = ++_i) {
      $("#help_dialog_" + x).remove();
    }
    chosen = all_posters[all_posters.length - 1];
    dialog = create('div', {
      className: 'help_dialog'
    });
    dialog_text = create('div', {
      id: 'help_dialog_text_1'
    });
    step = 0;
    appendobj([[$('body')[0], dialog], [dialog, dialog_text]]);
    if (!(chosen != null)) {
      step = 2;
    }
    if (poster_editor.open) {
      return setTimeout(function() {
        return help_steps(step, dialog, dialog_text, chosen);
      }, 300);
    } else {
      return help_steps(step, dialog, dialog_text, chosen);
    }
  };

  help_steps = function(dialog_stage, dialog, dialog_text, chosen) {
    var dialog_bank;
    if (dialog_stage == null) {
      dialog_stage = 0;
    }
    dialog_bank = ['Lift up posters to look underneath.<br><br><span id="click_to_continue">(click me to continue)</span>', 'You can also take down posters if you have good reason.<br><br>(Spam, outdated, etc.)<br><br><span id="click_to_continue">(click me to continue)</span>', 'You can add your <br>own poster here.<br><br><span id="click_to_continue">(click me to continue)</span>', 'Switch between the different<br>categories available here. Have fun!<br><br><span id="click_to_continue">(click me to close)</span>'];
    [
      function() {
        var chosen_offset;
        chosen_offset = $(chosen.all).offset();
        $(chosen.page).css({
          'background-position': '0px -316px'
        });
        $(chosen.lifted_corner).show();
        return $(dialog).css({
          left: chosen_offset.left + 250 + 'px',
          top: chosen_offset.top + 260 + 'px'
        });
      }, function() {
        var chosen_offset;
        chosen_offset = $(chosen.all).offset();
        $(chosen.lifted_corner).hide();
        $(chosen.tear_button).show().css({
          'background-position': '0px -37px'
        });
        $(chosen.page).css({
          'background-position': '0px 0px'
        });
        return $(dialog).css({
          top: chosen_offset.top - 34 + 'px'
        });
      }, function() {
        var add_button_offset;
        add_button_offset = $('#add_button').offset();
        if (chosen != null) {
          $(chosen.tear_button).css('background-position', '');
        }
        $('#add_button').addClass('add_button_show');
        return $(dialog).css({
          top: add_button_offset.top - 5 + 'px',
          left: add_button_offset.left - 190
        });
      }, function() {
        var categories_dropdown_offset, categories_dropdown_width;
        categories_dropdown_offset = $('#category_dropdown').offset();
        categories_dropdown_width = $('#category_dropdown').width();
        $('#category_dropdown').css('display', 'inline-block');
        $('#category_dropdown_button').addClass('category_hover');
        $('#add_button').removeClass('add_button_show');
        return $(dialog).css({
          top: categories_dropdown_offset.top + 60 + 'px',
          left: categories_dropdown_offset.left + categories_dropdown_width + 460 + 'px'
        });
      }, function() {
        setTimeout(function() {
          $('#category_dropdown').fadeOut(200);
          return $('#category_dropdown_button').removeClass('category_hover');
        }, 200);
        return $(dialog).remove();
      }
    ][dialog_stage].call(this);
    if (dialog_stage === 4) {
      return true;
    }
    dialog.id = "help_dialog_" + dialog_stage;
    dialog_text.id = "help_dialog_text_" + dialog_stage;
    dialog_text.innerHTML = dialog_bank[dialog_stage];
    $(dialog).append(dialog_text).hide().click(function() {
      return help_steps(dialog_stage + 1, dialog, dialog_text, chosen);
    });
    return setTimeout(function() {
      return $(dialog).fadeIn(140);
    }, 100);
  };

  window.ajax = ajax;

  window.tackboard = tackboard;

  window.poster_editor = poster_editor;

  window.flash_UI = flash_UI;

  window.read_hash = read_hash;

  window.init_paste = init_paste;

  window.help = help;

  window.help_steps = help_steps;

  window.toggle_editor = toggle_editor;

}).call(this);
